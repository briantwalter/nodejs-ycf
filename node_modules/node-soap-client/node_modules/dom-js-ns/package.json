{
  "name": "dom-js-ns",
  "version": "0.0.3",
  "description": "XML DOM based on sax",
  "dependencies": {
    "sax": ">=0.1.5"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./lib/dom-js",
  "engines": {
    "node": "*"
  },
  "readme": "dom-js is a node module that creates a DOM from a String using sax-js.\n\nDomJS has a parse() method  that takes a string and a callback which is used when the DOM is ready, or if there is an error.\n\nThe DOM returned is made of Element, Comment and Text objects (N.B.  no ProccessingInstruction or other stuff)\n\nAn Element has a name, a map of attributes, and an array of children, so you can find everything.\n\nYou get a couple of convenience methods on Element   text()  and  firstChild()  usage is hopefully obvious and save some boiler plate null checking.\n\nThe Element object has a method toXml() which returns a String with whitespace in tact.\n\nThats it (for now) no bells, no whistles. \n\n\n    var DomJS = require(\"dom-js\").DomJS;\n\n    var domjs = new DomJS();\n\n    var string = '<xml><!-- the comment --><elem someAtt=\"fat &amp; red\">Hello &amp; World</elem></xml>';\n    domjs.parse(string, function(err, dom) {\n    \tconsole.log(util.inspect(dom, false, 23));\n    \tconsole.log(\"serializes to : \" + dom.toXml());\n    });\n\n\n\n\nGotchas (that I can fix if it bothers anyone)\n\nAn empty tag <a></a>  will always be serialized in the short form <a/>.\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>  is ignored and dropped if there is one\nvar xml = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + dom.toXml()  to fix that one :)\n\nAn instance of DomJS should only be used once, but if you must reuse, call reset() before re-calling parse().\n\n",
  "readmeFilename": "README.md",
  "_id": "dom-js-ns@0.0.3",
  "dist": {
    "shasum": "acd26293f1d27da53d823fc3e525825f5e8ae978"
  },
  "_from": "dom-js-ns@0.0.3",
  "_resolved": "https://registry.npmjs.org/dom-js-ns/-/dom-js-ns-0.0.3.tgz"
}
